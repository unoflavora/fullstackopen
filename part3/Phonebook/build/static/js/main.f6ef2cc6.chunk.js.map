{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/server.js","App.js","index.js"],"names":["Persons","persons","filter","handleDelete","person","name","toLowerCase","includes","map","number","onClick","id","form","props","onSubmit","submit","value","onChange","textChange","numberChange","type","Filter","handleFilterInput","baseUrl","newObject","axios","post","then","response","data","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","alerts","setAlert","hook","get","useEffect","console","log","removed","className","added","already_removed","showAlert","event","target","PersonForm","preventDefault","hasName","some","personName","find","window","confirm","server","update","catch","e","returned","concat","alert","deleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6ef2cc6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons, filter, handleDelete}) => {\r\n  if (filter !== \"\") {\r\n    return persons\r\n      .filter((person) =>\r\n        person.name.toLowerCase().includes(filter.toLowerCase())\r\n      )\r\n      .map((person) => (\r\n        <p>\r\n          {person.name} {person.number}\r\n        </p>\r\n      ));\r\n  }\r\n  return persons.map(person => (\r\n    <p>\r\n      {person.name} {person.number} <button onClick={()=>handleDelete(person.id)}>Delete</button>\r\n    </p>\r\n  ));\r\n};\r\n\r\nexport default Persons\r\n","const form = (props) => {\r\n  return (\r\n    <form onSubmit={props.submit}>\r\n      <div>\r\n        name: <input value={props.name} onChange={props.textChange} />\r\n        <br />\r\n        number: <input value={props.number} onChange={props.numberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default form\r\n","const Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={props.filter} onChange={props.handleFilterInput} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst add = (newObject) => {\r\n    const request =  axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {add, del, update}","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/Persons\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport axios from \"axios\";\r\nimport server from \"./services/server\";\r\nimport './App.css'\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [alerts, setAlert] = useState({});\r\n\r\n  const hook = () => {\r\n    axios.get(\"/api/persons\").then((response) => {\r\n      setPersons(response.data);\r\n    });\r\n  };\r\n  useEffect(hook, []);\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberInput = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterInput = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let hasName = persons.some((person) => person[\"name\"] === newName);\r\n    const newObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    if (hasName) {\r\n      let personName = persons.find((person) => person.name === newName);\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace old number with new one?`\r\n        )\r\n      ) {\r\n        server\r\n          .update(personName.id, newObject)\r\n          .then((update) =>\r\n            setPersons(\r\n              persons.map(person => person.id === personName.id ? update : person)\r\n            )\r\n          )\r\n          .catch(e => {\r\n            setAlert({'already_removed' : `Information of ${personName.name} has already been removed from server`})\r\n            hook()\r\n            })\r\n      setNewName(\"\");\r\n      setNewNumber(\"\")\r\n      return;\r\n    }}\r\n    if (newName === \"\") {\r\n      alert(\"Please enter your name!\");\r\n      return;\r\n    }\r\n\r\n    server\r\n      .add(newObject)\r\n      .then((returned) => {\r\n        setPersons(persons.concat(returned))\r\n        setAlert({'added':`Added ${returned.name}`})\r\n    })\r\n      .catch((e) => alert(e));\r\n\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Do you sure want to delete?\")) {\r\n      server\r\n        .del(id)\r\n        .then(() => {\r\n          let deleted = persons.find(person => person.id === id)\r\n          setAlert({'removed': `Information of ${deleted.name} is successfully removed`})\r\n          setPersons(persons.filter((person) => person.id !== deleted.id))\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n  };\r\n\r\n  const showAlert = (alerts) => {\r\n    console.log(alerts)\r\n    if (alerts === null){\r\n      return null\r\n    } \r\n    if (alerts.removed) {\r\n      return <p className='removed'>{alerts.removed}</p>\r\n    }\r\n    if (alerts.added) {\r\n      return <p className='success'>{alerts.added}</p>\r\n    }\r\n\r\n    if(alerts.already_removed) {\r\n      return <p className='error'>{alerts.already_removed}</p>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showAlert(alerts)}\r\n      <h2>Phonebook</h2>\r\n      <Filter filter={filter} handleFilterInput={handleFilterInput} />\r\n      <h2>add a new</h2>\r\n      <PersonForm\r\n        name={newName}\r\n        number={newNumber}\r\n        numberChange={handleNumberInput}\r\n        textChange={handleInputChange}\r\n        submit={handleSubmit}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete} />\r\n    </div>\r\n  );\r\n  };\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, \r\ndocument.getElementById('root'))"],"sourceRoot":""}