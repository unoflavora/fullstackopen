{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/ShowAlert.js","services/server.js","App.js","index.js"],"names":["Persons","persons","filter","handleDelete","person","Name","toLowerCase","includes","map","Num","onClick","id","form","props","onSubmit","submit","value","name","onChange","textChange","number","numberChange","type","Filter","handleFilterInput","showAlert","alert","length","removed","className","added","response","data","error","baseUrl","exported","get","axios","then","add","newObject","post","del","delete","update","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","alerts","setAlert","useEffect","server","ShowAlert","event","target","PersonForm","preventDefault","hasName","find","personName","window","confirm","catch","e","returned","concat","deleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3a3937d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons, filter, handleDelete}) => {\r\n  if (filter !== \"\") {\r\n    return persons\r\n      .filter((person) =>\r\n        person.Name.toLowerCase().includes(filter.toLowerCase())\r\n      )\r\n      .map((person) => (\r\n        <p>\r\n          {person.Name} {person.Num} <button onClick={()=>handleDelete(person.id)}>Delete</button>\r\n        </p>\r\n      ));\r\n  }\r\n  return persons.map(person => (\r\n    <p>\r\n      {person.Name} {person.Num} <button onClick={()=>handleDelete(person.id)}>Delete</button>\r\n    </p>\r\n  ));\r\n};\r\n\r\nexport default Persons\r\n","const form = (props) => {\r\n  return (\r\n    <form onSubmit={props.submit}>\r\n      <div>\r\n        name: <input value={props.name} onChange={props.textChange} />\r\n        <br />\r\n        number: <input value={props.number} onChange={props.numberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default form\r\n","const Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={props.filter} onChange={props.handleFilterInput} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter\r\n","const showAlert = ({ alert }) => {\r\n  if (alert.length == 0) {\r\n    return null;\r\n  }\r\n  if (alert.removed) {\r\n    return <p className=\"removed\">{alert.removed}</p>;\r\n  }\r\n  if (alert.added) {\r\n    return <p className=\"success\">{alert.added}</p>;\r\n  }\r\n\r\n  if (alert.response) {\r\n    return <p className=\"error\">{alert.response.data.error}</p>;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default showAlert;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst get = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst add = (newObject) => {\r\n    const request =  axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst exported = {get, add, del, update}\r\n\r\nexport default exported","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/Persons\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ShowAlert from \"./components/ShowAlert\";\r\nimport server from \"./services/server\";\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [alerts, setAlert] = useState({});\r\n\r\n  useEffect(() => server.get().then(response =>setPersons(response)), [])\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberInput = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterInput = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let hasName = persons.find((person) => person[\"name\"] === newName);\r\n    const newObject = {\r\n      Name: newName,\r\n      Num: newNumber,\r\n    };\r\n\r\n    if (hasName) {\r\n      let personName = persons.find((person) => person.name === newName);\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace old number with new one?`\r\n        )\r\n      ) {\r\n        server\r\n          .update(personName.id, newObject)\r\n          .then(update =>\r\n            setPersons(persons.map(person => person.id === personName.id ? update : person))\r\n          )\r\n          .catch(e => setAlert(e))\r\n      setNewName(\"\");\r\n      setNewNumber(\"\")\r\n      return;\r\n    }}\r\n    if (newName === \"\") {\r\n      alert(\"Please enter your name!\");\r\n      return;\r\n    }\r\n\r\n    server\r\n      .add(newObject)\r\n      .then((returned) => {\r\n        setPersons(persons.concat(returned))\r\n        setAlert({'added':`Added ${returned.name}`})\r\n    })\r\n      .catch(e => setAlert(e));\r\n\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Do you sure want to delete?\")) {\r\n      server\r\n        .del(id)\r\n        .then((del) => {\r\n          let deleted = persons.find(person => person.id === id)\r\n          setAlert({'removed': `Information of ${deleted.Name} is successfully removed`})\r\n          setPersons(persons.filter((person) => person.id !== deleted.id))\r\n        })\r\n        .catch((e) => setAlert(e));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ShowAlert alert={alerts}/>\r\n      <h2>Phonebook</h2>\r\n      <Filter filter={filter} handleFilterInput={handleFilterInput} />\r\n      <h2>add a new</h2>\r\n      <PersonForm\r\n        name={newName}\r\n        number={newNumber}\r\n        numberChange={handleNumberInput}\r\n        textChange={handleInputChange}\r\n        submit={handleSubmit}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete} />\r\n    </div>\r\n  );\r\n  };\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, \r\ndocument.getElementById('root'))"],"sourceRoot":""}